{
  "swagger": "2.0",
  "host": "localhost:8080",
  "basePath": "/",
  "info": {
    "version": "1.0.0",
    "title": "Central de Erros API",
    "description": "Store and retrieve application logs from other applications",
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/users/logs": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all logs",
        "description": "Find and retrieve all the logs sotred by the user. Is necessary to especify 'Bearer' Token.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "You need pass the Authorization header using the Bearer schema.",
            "schema": {
              "type": "string",
              "required": true,
              "example": "Bearer wgioiERBtXR6CXppvSyKV0MhFu28TKgfw94JvNEuDHA"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "example": 1
                },
                "Logs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Log"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          },
          "_200": {
            "description": "Returns a message that did not find the logs",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There are no logs"
                }
              }
            }
          },
          "_401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Token not provided"
                }
              }
            }
          }
        }
      }
    },
    "/users/signup": {
      "post": {
        "summary": "Create user",
        "description": "Create a new user account to get access to the API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jo√£o da Silva"
                },
                "email": {
                  "type": "string",
                  "example": "joao@email.com.br"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the name, email and date when the user was created",
            "schema": {
              "$ref": "#/create_200"
            }
          },
          "406": {
            "description": "Returns the message stating that the data sent is invalid",
            "schema": {
              "$ref": "#/create_406"
            }
          },
          "409": {
            "description": "Returns the message stating that the email already exists",
            "schema": {
              "$ref": "#/create_409"
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "schema": {
              "$ref": "#/error_500"
            }
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "summary": "User login",
        "description": "Authenticate an existing user returning a token for API requests",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "User credentials",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "joao@email.com.br"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the token in the request body",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOnsiaWQiOjJ9LCJpYXQiOjE1ODUxNjkwMjMsImV4cCI6MTU4NTI1NTQyM30.wgioiERBtXR6CXppvSyKV0MhFu28TKgfw94JvNEuDHA"
                }
              }
            }
          },
          "400": {
            "description": "Returns Bad Request",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Incorrect password"
                }
              }
            }
          },
          "406": {
            "description": "Returns Not Acceptable",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "You are input wrong data then necessary"
                }
              }
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          },
          "_406": {
            "description": "Returns Not Acceptable",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Data values are not valid"
                }
              }
            }
          }
        }
      }
    },
    "/users/restore": {
      "post": {
        "summary": "User login",
        "description": "Authenticate an existing user returning a token for API requests",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "User credentials",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "joao@email.com.br"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "User restored successfully."
                }
              }
            }
          },
          "401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Incorrect password"
                }
              }
            }
          },
          "406": {
            "description": "Returns Not Acceptable",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "You are input wrong data then necessary"
                }
              }
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          },
          "_200": {
            "description": "Returns Bad Request",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There is no user"
                }
              }
            }
          },
          "_406": {
            "description": "Returns Not Acceptable",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Data values are not valid"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "patch": {
        "summary": "Update user",
        "description": "Update an authenticated user with the new information provided in request body",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "You need pass the Authorization header using the Bearer schema.",
            "schema": {
              "type": "string",
              "required": true,
              "example": "Bearer wgioiERBtXR6CXppvSyKV0MhFu28TKgfw94JvNEuDHA"
            }
          },
          {
            "in": "body",
            "name": "User data to be updated",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jo√£o da Silva Sauro"
                },
                "email": {
                  "type": "string",
                  "example": "joao_sauro@email.com.br"
                },
                "oldPassword": {
                  "type": "string",
                  "example": "123456"
                },
                "newPassword": {
                  "type": "string",
                  "example": "12345678"
                },
                "confirmPassword": {
                  "type": "string",
                  "example": "12345678"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Updated sucessfully!"
                }
              }
            }
          },
          "204": {
            "description": "Returns a message that did not find a user",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There is no user"
                }
              }
            }
          },
          "401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password does not match"
                }
              }
            }
          },
          "406": {
            "description": "Returns Not Acceptable",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Ivalid data"
                }
              }
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          },
          "_401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid token"
                }
              }
            }
          },
          "__401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Token not provided"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Disable user",
        "description": "Executes a soft delete disabling the user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the message stating that the user has been deleted",
            "schema": {
              "$ref": "#/delete_200"
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "schema": {
              "$ref": "#/error_500"
            }
          },
          "200_": {
            "description": "Returns the message stating that the user no longer exists",
            "schema": {
              "$ref": "#/delete_200_"
            }
          }
        }
      }
    },
    "/users/hard": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "You need pass the Authorization header using the Bearer schema.",
            "schema": {
              "type": "string",
              "required": true,
              "example": "Bearer wgioiERBtXR6CXppvSyKV0MhFu28TKgfw94JvNEuDHA"
            }
          }
        ],
        "summary": "Delete user forever",
        "description": "Remove user account and all the logs associated with it from the database. This action cannot be undone. The user id will be provided by the token.",
        "responses": {
          "200": {
            "description": "Returns the body with a message of deletation",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Deleted successfully, this action cannot be undone"
                }
              }
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          },
          "_200": {
            "description": "Returns a message that did not find a user",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There is no user"
                }
              }
            }
          }
        }
      }
    },
    "/logs/restore/all": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Restore all logs",
        "description": "Restore all logs created by the user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a succesfull message when all logs of an user are restored",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "All logs restored successfully"
                }
              }
            }
          },
          "500": {
            "description": "Returns a message stating that an error has occurred on the server",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "200_": {
            "description": "Returns a message stating that there are no logs to restore for this user",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There are no logs"
                }
              }
            }
          }
        }
      }
    },
    "/logs/restore/id/{id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Restore a log",
        "description": "Restore a log by an informed ID",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Restore the log with the matching ID if it existed previously. Otherwise do nothing.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Log restored successfully"
                }
              }
            }
          },
          "204": {
            "description": "There is no log with informed ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There is no log"
                }
              }
            }
          },
          "500": {
            "description": "Error on the server side",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/logs/sender/{senderApplication}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get logs by application",
        "description": "Get all the logs for the application passed in the url parameter",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "senderApplication",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Log"
                  }
                }
              }
            }
          },
          "204": {
            "description": "There is no logs for the informed application",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "There is no log"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error on the server side",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "string",
                    "example": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logs/environment/{environment}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get logs by environment",
        "description": "Get all logs of an environment that is passed in the url parameter",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "environment",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Show all logs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Log"
              }
            }
          },
          "500": {
            "description": "Returns a message stating that an error has occurred on the server",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          },
          "200_": {
            "description": "Returns a message stating that there are no logs to show for this user",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There are no logs"
                }
              }
            }
          }
        }
      }
    },
    "/logs/level/{level}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get logs by level",
        "description": "Get all the logs with the same level passed in the url parameter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "level",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all logs by level",
            "schema": {
              "$ref": "#/getByLevel_200"
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "schema": {
              "$ref": "#/error_500"
            }
          },
          "200_": {
            "description": "Returns the message stating that there are no logs",
            "schema": {
              "$ref": "#/getByLevel_200_"
            }
          }
        }
      }
    },
    "/logs": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create logs",
        "description": "Creates a new log associated with a user. The user id is provided by the token.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "You need pass the Authorization header using the Bearer schema.",
            "schema": {
              "type": "string",
              "required": true,
              "example": "Bearer wgioiERBtXR6CXppvSyKV0MhFu28TKgfw94JvNEuDHA"
            }
          },
          {
            "in": "body",
            "name": "Logs body",
            "schema": {
              "type": "object",
              "properties": {
                "level": {
                  "type": "string",
                  "example": "WARN"
                },
                "description": {
                  "type": "string",
                  "example": "Application restarted"
                },
                "senderApplication": {
                  "type": "string",
                  "example": "Server load monitor"
                },
                "sendDate": {
                  "type": "string",
                  "example": "11/26/2019 15:00"
                },
                "environment": {
                  "type": "string",
                  "example": "homologation"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "createdLog": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "level": {
                      "type": "string",
                      "example": "WARN"
                    },
                    "description": {
                      "type": "string",
                      "example": "Application restarted"
                    },
                    "senderApplication": {
                      "type": "string",
                      "example": "Server load monitor"
                    },
                    "sendDate": {
                      "type": "string",
                      "example": "11/26/2019 15:00"
                    },
                    "environment": {
                      "type": "string",
                      "example": "homologation"
                    },
                    "UserId": {
                      "type": "number",
                      "example": 1
                    },
                    "updatedAt": {
                      "type": "date-time",
                      "example": "2020-03-26T00:21:40.039Z"
                    },
                    "createdAt": {
                      "type": "date-time",
                      "example": "2020-03-26T00:21:40.039Z"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Returns Not Acceptable",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Ivalid data"
                }
              }
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/logs/id/{id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete log",
        "description": "Delete the log with the id passed in the url",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the message stating that the log has been deleted",
            "schema": {
              "$ref": "#/deleteById_200"
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "schema": {
              "$ref": "#/error_500"
            }
          },
          "200_": {
            "description": "Returns the message stating that there is no log",
            "schema": {
              "$ref": "#/deleteById_200"
            }
          }
        }
      }
    },
    "/logs/all": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "You need pass the Authorization header using the Bearer schema.",
            "schema": {
              "type": "string",
              "required": true,
              "example": "Bearer wgioiERBtXR6CXppvSyKV0MhFu28TKgfw94JvNEuDHA"
            }
          }
        ],
        "summary": "Soft Delete for all logs from user.",
        "description": "Delete al the logs from a user. The user id will be provided by the token.",
        "responses": {
          "200": {
            "description": "Returns the body with a message of deletation",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Deleted successfully"
                }
              }
            }
          },
          "401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          },
          "_200": {
            "description": "Returns a message that did not find the logs",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There are no logs"
                }
              }
            }
          },
          "_401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Token not provided"
                }
              }
            }
          }
        }
      }
    },
    "/logs/all/hard": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "You need pass the Authorization header using the Bearer schema.",
            "schema": {
              "type": "string",
              "required": true,
              "example": "Bearer wgioiERBtXR6CXppvSyKV0MhFu28TKgfw94JvNEuDHA"
            }
          }
        ],
        "summary": "Hard Delete for all logs from user.",
        "description": "Delete al the logs from a user forever. This action cannot be undone. The user id will be provided by the token.",
        "responses": {
          "200": {
            "description": "Returns the body with a message of deletation",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Deleted successfully, this action cannot be undone"
                }
              }
            }
          },
          "401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Returns the message stating that an error has occurred on the server",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          },
          "_200": {
            "description": "Returns a message that did not find the logs",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There are no logs"
                }
              }
            }
          },
          "_401": {
            "description": "Returns Unauthorized",
            "produces": [
              "application/json"
            ],
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Token not provided"
                }
              }
            }
          }
        }
      }
    },
    "logs/hard/{id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "You need pass the Authorization header using the Bearer schema.",
            "schema": {
              "type": "string",
              "required": true,
              "example": "Bearer wgioiERBtXR6CXppvSyKV0MhFu28TKgfw94JvNEuDHA"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Remove the log with the matching ID if it existed previously. Otherwise do nothing.",
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Deleted successfully, this action cannot be undone"
                  }
                }
              }
            }
          },
          "204": {
            "description": "There is no log with informed ID",
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "There is no log"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error on the server side",
            "application/json": null,
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "create_200": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "User created successfully"
      },
      "data": {
        "type": "string",
        "example": {
          "userName": "Jo√£o da Silva",
          "userEmail": "joao@email.com.br",
          "createdAt": "2020-03-25T22:21:34.759Z"
        }
      }
    }
  },
  "create_406": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "Invalid data"
      }
    }
  },
  "create_409": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "User email already exists"
      }
    }
  },
  "delete_200_": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "There is no user"
      }
    }
  },
  "delete_200": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "Deleted succesfully"
      }
    }
  },
  "getByLevel_200": {
    "type": "object",
    "properties": {
      "id": {
        "type": "number",
        "example": 1
      },
      "level": {
        "type": "string",
        "example": "WARN"
      },
      "description": {
        "type": "string",
        "example": "Application restarted"
      },
      "senderApplication": {
        "type": "string",
        "example": "Server load monitor"
      },
      "sendDate": {
        "type": "string",
        "example": "11/26/2019 15:00"
      },
      "environment": {
        "type": "string",
        "example": "homologation"
      },
      "UserId": {
        "type": "number",
        "example": 1
      },
      "updatedAt": {
        "type": "date-time",
        "example": "2020-03-26T00:21:40.039Z"
      },
      "createdAt": {
        "type": "date-time",
        "example": "2020-03-26T00:21:40.039Z"
      }
    }
  },
  "getByLevel_200_": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "There are no logs"
      }
    }
  },
  "deleteById_200": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "Deleted successfully"
      }
    }
  },
  "deleteById_200_": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "There is no logs"
      }
    }
  },
  "error_500": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "Internal Server Error"
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 123
        },
        "name": {
          "type": "string",
          "example": "Jo√£o da Silva"
        },
        "email": {
          "type": "string",
          "example": "joao@email.com.br"
        },
        "password": {
          "type": "string",
          "format": "password",
          "example": "652a80db6fab5930dabf7d4fb7db5d67"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    },
    "Log": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 321
        },
        "level": {
          "type": "string",
          "enum": [
            "FATAL",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE",
            "ALL",
            "OFF"
          ],
          "example": "WARN"
        },
        "description": {
          "type": "string",
          "example": "Application restarted"
        },
        "senderApplication": {
          "type": "string",
          "example": "Server load monitor"
        },
        "sendDate": {
          "type": "string"
        },
        "environment": {
          "type": "string",
          "enum": [
            "production",
            "homologation"
          ],
          "example": "homologation"
        },
        "userId": {
          "type": "integer",
          "example": 123
        }
      },
      "required": [
        "level",
        "description",
        "senderApplication",
        "sendDate",
        "environment",
        "userId"
      ]
    }
  }
}